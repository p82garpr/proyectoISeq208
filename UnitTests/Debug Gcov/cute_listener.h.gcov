        -:    0:Source:C:/Users/Isaac/Desktop/GINF/2º/IS/p1/cute/cute_listener.h
        -:    0:Graph:C:/Users/Isaac/Desktop/GINF/2º/IS/p1/Debug Gcov/src/Test.gcno
        -:    0:Data:C:/Users/Isaac/Desktop/GINF/2º/IS/p1/Debug Gcov/src/Test.gcda
        -:    0:Runs:1
        -:    1:/*********************************************************************************
        -:    2: * This file is part of CUTE.
        -:    3: *
        -:    4: * Copyright (c) 2007-2018 Peter Sommerlad, IFS
        -:    5: *
        -:    6: * Permission is hereby granted, free of charge, to any person obtaining a copy
        -:    7: * of this software and associated documentation files (the "Software"), to deal
        -:    8: * in the Software without restriction, including without limitation the rights
        -:    9: * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        -:   10: * copies of the Software, and to permit persons to whom the Software is
        -:   11: * furnished to do so, subject to the following conditions:
        -:   12: *
        -:   13: * The above copyright notice and this permission notice shall be included in all
        -:   14: * copies or substantial portions of the Software.
        -:   15: *
        -:   16: * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        -:   17: * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        -:   18: * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        -:   19: * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        -:   20: * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        -:   21: * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        -:   22: * SOFTWARE.
        -:   23: *
        -:   24: *********************************************************************************/
        -:   25:
        -:   26:#ifndef CUTE_LISTENER_H_
        -:   27:#define CUTE_LISTENER_H_
        -:   28:#include "cute_base.h"
        -:   29:#include "cute_suite.h"
        -:   30:namespace cute {
        -:   31:	struct null_listener{ // defines Contract of runner parameter
function _ZN4cute13null_listener5beginERKSt6vectorINS_4testESaIS2_EEPKcj called 1 returned 100% blocks executed 100%
        1:   32:		void begin(suite const &, char const * /*info*/, size_t /*n_of_tests*/){}
function _ZN4cute13null_listener3endERKSt6vectorINS_4testESaIS2_EEPKc called 1 returned 100% blocks executed 100%
        1:   33:		void end(suite const &, char const * /*info*/){}
function _ZN4cute13null_listener5startERKNS_4testE called 6 returned 100% blocks executed 100%
        6:   34:		void start(test const &){}
function _ZN4cute13null_listener7successERKNS_4testEPKc called 2 returned 100% blocks executed 100%
        2:   35:		void success(test const &,char const * /*msg*/){}
function _ZN4cute13null_listener7failureERKNS_4testERKNS_12test_failureE called 4 returned 100% blocks executed 100%
        4:   36:		void failure(test const &,test_failure const &){}
function _ZN4cute13null_listener5errorERKNS_4testEPKc called 0 returned 0% blocks executed 0%
    #####:   37:		void error(test const &,char const * /*what*/){}
        -:   38:	};
        -:   39:}
        -:   40:#endif /* CUTE_LISTENER_H_ */
        -:   41:
